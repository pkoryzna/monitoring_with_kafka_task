# https://help.aiven.io/en/articles/489572-getting-started-with-aiven-kafka
kafka {
    bootstrap.servers = ${KAFKA_BOOTSTRAP_SERVERS}
    security.protocol = "SSL"
    ssl.endpoint.identification.algorithm = ""
    ssl.truststore.location = ${KAFKA_SSL_TRUSTSTORE_PATH}
    ssl.truststore.password = ${KAFKA_SSL_TRUSTSTORE_PASSWORD}
    ssl.keystore.type = "PKCS12"
    ssl.keystore.location = ${KAFKA_SSL_KEYSTORE_PATH}
    ssl.keystore.password = ${KAFKA_SSL_KEYSTORE_PASSWORD}
    ssl.key.password = ${KAFKA_SSL_KEY_PASSWORD}
    key.deserializer = "org.apache.kafka.common.serialization.StringDeserializer"
    value.deserializer = "org.apache.kafka.common.serialization.ByteArrayDeserializer"

    enable.auto.commit = "false"
    group.id = "stats_consumer_default"
    group.id = ${?KAFKA_CONSUMER_GROUP_ID}

    auto.offset.reset = "earliest"
}

statconsumer.topic = "stats_proto"
statconsumer.topic = ${?STATCONSUMER_TOPIC}

statconsumer.polling.period = "1s"
statconsumer.polling.period = ${?STATCONSUMER_POLLING_PERIOD}

statconsumer.termination.timeout = "5s"
statconsumer.termination.timeout = ${?STATCONSUMER_TERMINATION_TIMEOUT}

statconsumer.commit.timeout = "5s"
statconsumer.commit.timeout = ${?STATCONSUMER_COMMIT_TIMEOUT}

statconsumer.db {
    url = ${DB_URL}
    user = ${DB_USER}
    password = ${DB_PASSWORD}
}